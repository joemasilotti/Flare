<% module_namespacing do -%>
class <%= controller_class_name %>Controller < ApplicationController
  def index
    @<%= plural_table_name %> = <%= orm_class.all(class_name) %>
  end

  def show
    @<%= singular_table_name %> = <%= orm_class.find(class_name, "params[:id]") %>
  end

  def new
    @<%= singular_table_name %> = <%= orm_class.build(class_name) %>
  end

  def edit
    @<%= singular_table_name %> = <%= orm_class.find(class_name, "params[:id]") %>
  end

  def create
    @<%= singular_table_name %> = <%= orm_class.build(class_name, "#{singular_table_name}_params") %>
    if @<%= orm_instance.save %>
      redirect_to <%= redirect_resource_name %>, notice: <%= %("#{human_name} was added.") %>
    else
      render :new, status: :unprocessable_entity
    end
  end

  def update
    @<%= singular_table_name %> = <%= orm_class.find(class_name, "params[:id]") %>
    if @<%= orm_instance.update("#{singular_table_name}_params") %>
      redirect_to <%= redirect_resource_name %>, notice: <%= %("#{human_name} was updated.") %>, status: :see_other
    else
      render :edit, status: :unprocessable_entity
    end
  end

  def destroy
    <%= orm_class.find(class_name, "params[:id]") %>.destroy
    redirect_to <%= index_helper(type: :path) %>, notice: <%= %("#{human_name} was removed.") %>, status: :see_other
  end

  private

  def <%= "#{singular_table_name}_params" %>
    <%- if attributes_names.empty? -%>
    params.fetch(:<%= singular_table_name %>, {})
    <%- else -%>
    params.require(:<%= singular_table_name %>).permit(<%= permitted_params %>)
    <%- end -%>
  end
end
<% end -%>
